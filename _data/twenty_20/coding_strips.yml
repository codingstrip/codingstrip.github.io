- path:  
    - 
      path_url: '../images/1_constructs/1_variable/peter_parker/1-min.png'
      width: '30%'
      height: '30%'
    - 
      path_url: '../images/1_constructs/1_variable/peter_parker/2-min.png'
      width: '30%'
      height: '30%'
    - 
      path_url: '../images/1_constructs/1_variable/peter_parker/3-min.png'
      width: '30%'
      height: '30%'
    - 
      path_url: '../images/1_constructs/1_variable/peter_parker/4-min.png'
      width: '85%'
      height: '85%'
    - 
      path_url: '../images/1_constructs/1_variable/peter_parker/5-min.png'
      width: '85%'
      height: '85%'
  path_compressed: '../images/1_constructs/1_variable/peter_parker/1-min.png'
  path_combined: '../images/1_constructs/1_variable/peter_parker/variable-spiderman-min.png'
  code: 'let name = "Peter Parker";<br>let age = 1;<br>let hobby = "sleeping"<br>...<br>age = 14;<br>hobby = ["Skateboard", "Play with dogs"]<br>...'
  alt: 
  description: 
  width: 
  height: 
  title: Spiderman
  concept: variable
  id: variable-spiderman
  link: /codingstrips/variable-spiderman
  authors: 
    - Workshop Participants
    - Bernadette Cheng

- path: 
    - 
      path_url: '../images/1_constructs/1_variable/Group_loop_(variable)-min.png'
      width: '75%'
      height: '75%'
  path_compressed: '../images/1_constructs/1_variable/variable-housing-min.png'
  path_combined: '../images/1_constructs/1_variable/variable-housing-min.png'
  alt: 
  description: 
  width: 400
  height: 600
  title: Housing
  concept: variable  
  id: variable-housing
  link: /codingstrips/variable-housing
  authors: 
    - Workshop Participants
    - Bernadette Cheng

- path: 
    - 
      path_url: '../images/1_constructs/1_variable-assignment/C2B1-min.png'
      width: '40%'
      height: '40%'
    - 
      path_url: '../images/1_constructs/1_variable-assignment/C2B2.png'
      width: '40%'
      height: '40%'
  path_compressed: '../images/1_constructs/1_variable-assignment/C2B1-min.png'
  path_combined: '../images/1_constructs/1_variable-assignment/variable-piggybank-min.png'
  code: 'while not_full:<br><br>
  &nbsp;&nbsp;if normal_day:<br>
  &nbsp;&nbsp;&nbsp;&nbsp;piggyBank += 1<br><br>
  &nbsp;&nbsp;elif icecream_day:<br>
  &nbsp;&nbsp;&nbsp;&nbsp;piggyBank += 0.25'
  alt: 
  description: 
  width: 
  height: 
  id: variable-piggy
  link: /codingstrips/variable-piggy
  title: Piggy Bank    
  concept: variable
  authors: 
    - Sangho Suh
    - Bernadette Cheng

- path: 
    - 
      path_url: '../images/1_constructs/2_boolean/1.1-min.png'
      width: '30%'
      height: '30%'
    - 
      path_url: '../images/1_constructs/2_boolean/1.2-min.png'
      width: '30%'
      height: '30%'
    - 
      path_url: '../images/1_constructs/2_boolean/1.3-min.png'
      width: '30%'
      height: '30%'
    - 
      path_url: '../images/1_constructs/2_boolean/1.4-min.png'
      width: '30%'
      height: '30%'
    - 
      path_url: '../images/1_constructs/2_boolean/2.1-min.png'
      width: '30%'
      height: '30%'
    - 
      path_url: '../images/1_constructs/2_boolean/2.2-min.png'
      width: '30%'
      height: '30%'
    - 
      path_url: '../images/1_constructs/2_boolean/2.3-min.png'
      width: '30%'
      height: '30%'

  path_compressed: '../images/1_constructs/2_boolean/1.4-min.png'
  path_combined: '../images/1_constructs/2_boolean/boolean-boblean-min.png'
  code: 'if (time >= 9:30 pm) {<br>
    &nbsp;&nbsp;if (Bob.asleep == True) {<br>
      &nbsp;&nbsp;&nbsp;&nbsp;studyNextDay();<br>
    &nbsp;&nbsp;} else if (Bob.asleep == False) {<br>
      &nbsp;&nbsp;&nbsp;&nbsp;notStudyNextDay();<br>
    &nbsp;&nbsp;}<br>}'
  alt: 
  description: 
  width: 
  height:     
  title: Bob Lean
  concept: boolean
  link: /codingstrips/boolean-boblean
  id: boolean-boblean
  authors: 
    - Workshop Participants
    - Bernadette Cheng

- path: 
    - 
      path_url: '../images/1_constructs/3_conditional/3-min.png'
      width: '85%'
      height: '85%'
  path_compressed: '../images/1_constructs/3_conditional/condition-pizza-min.png'
  path_combined: '../images/1_constructs/3_conditional/conditional-pizza-min.png'
  code: 
    'if Scooter.remembersNumber():<br>
    &nbsp;&nbsp;pizza.Deliver();<br>else:<br>
    &nbsp;&nbsp;wait();'
  alt: 
  description: 
  width: 
  height:     
  title: Pizza Delivery
  id: conditional-pizza
  link: /codingstrips/conditional-pizza
  concept: conditional  
  authors: 
    - Workshop Participants
    - Bernadette Cheng

- path: 
    - 
      path_url: '../images/1_constructs/4_counted_loop/2-min.png'
      width: '90%'
      height: '90%'
  path_compressed: '../images/1_constructs/4_counted_loop/2-min.png'
  path_combined: '../images/1_constructs/4_counted_loop/loop-candies-min.png'
  code: 'joy = 0<br><br>if weekend:<br>
  &nbsp;&nbsp;candies = 3<br>else:<br>
  &nbsp;&nbsp;candies = 2<br><br>for candy in candies:<br>
  &nbsp;&nbsp;joy++<br><br>for sibling in siblings:<br>
  &nbsp;&nbsp;joy--<br>'
  alt: 
  description: 
  width: 
  height:     
  title: Candies
  id: loop-candies
  link: /codingstrips/loop-candies
  concept: conditional
  authors: 
    - Workshop Participants
    - Bernadette Cheng

- path: 
    - 
      path_url: '../images/1_constructs/4_counted_loop/Moments-min.png'
      width: '55%'
      height: '55%'
    - 
      path_url: '../images/1_constructs/4_counted_loop/Moments_2.png'
      width: '55%'
      height: '55%'
  path_compressed: '../images/1_constructs/4_counted_loop/Moments-min.png'
  path_combined: '../images/1_constructs/4_counted_loop/counted_loop-crunch.png'
  code: 'for (let day = 1; day <= 100; day++) {<br>
   &nbsp;&nbsp;eat(captain_crunch);<br>}'
  alt: 
  description: 
  width: 
  height:     
  title: Capt'n Crunch Challenge  
  concept: for loop
  id: loop-crunch
  link: /codingstrips/loop-crunch
  authors: 
    - Sangho Suh
    - Bernadette Cheng

- path: 
    - 
      path_url: '../images/1_constructs/6_function/1.1-min.png'
      width: '35%'
      height: '35%'
    - 
      path_url: '../images/1_constructs/6_function/1.2-min.png'
      width: '65%'      
      height: '65%'
    - 
      path_url: '../images/1_constructs/6_function/1.3-min.png'
      width: '40%'
      height: '40%'
    - 
      path_url: '../images/1_constructs/6_function/1.4-min.png'
      width: '65%'
      height: '65%'
    - 
      path_url: '../images/1_constructs/6_function/1.5-min.png'
      width: '35%'
      height: '35%'
    - 
      path_url: '../images/1_constructs/6_function/1.6-min.png'
      width: '35%'
      height: '35%'
    - 
      path_url: '../images/1_constructs/6_function/1.7-min.png'
      width: '35%'
      height: '35%'
  path_compressed: '../images/1_constructs/6_function/1.1-min.png'
  path_combined: '../images/1_constructs/6_function/function-snapchat-min.png'
  code: 'boolean wifi = false;<br><br>while (!wifi) {<br>
    &nbsp;&nbsp;move();<br>
    &nbsp;&nbsp;wifi = connectToWifi();<br>}<br><br>sendSnap();'
  alt: 
  description: 
  width: 
  height:     
  title: Snapchat
  concept: function
  id: function-snapchat
  link: /codingstrips/function-snapchat
  authors: 
    - Workshop Participants
    - Bernadette Cheng

- path: 
    - 
      path_url: '../images/2_data_structure/1_array/frog-jump-min.jpg'
      width: '90%'
      height: '90%'
  path_compressed: '../images/2_data_structure/1_array/frog-jump-min.jpg'
  path_combined: '../images/2_data_structure/1_array/array-frog-min.png'
  code: 'i = 0;<br><br>String[] lilypad = ["purple", "purple", "purple", "rock", "red"];<br><br>while (lilypad[i] !== "red") {<br>
    &nbsp;&nbsp;if (lilypad[i] === "rock") {<br>
      &nbsp;&nbsp;&nbsp;&nbsp;frog.confused();<br>
    &nbsp;&nbsp;}<br>
      &nbsp;&nbsp;frog.jump();<br>
    &nbsp;&nbsp;i++;<br>}'
  alt: 
  description: 
  width: 
  height:     
  title: Frog & Lily Pad
  concept: array & while loop
  id: array-frog
  link: /codingstrips/array-frog
  authors: 
    - Gracie Xia

- path: 
    - 
      path_url: '../images/2_data_structure/2_linked_list/Zoom-min.png'
      width: '90%'
      height: '90%'
    - 
      path_url: '../images/2_data_structure/2_linked_list/Zoom_2-min.png'
      width: '90%'
      height: '90%'
    - 
      path_url: '../images/2_data_structure/2_linked_list/Zoom_3-min.png'
      width: '90%'
      height: '90%'
  path_compressed: '../images/2_data_structure/2_linked_list/Zoom-min.png'
  path_combined: '../images/2_data_structure/2_linked_list/linked_list-vertical-min.png'
  alt: 
  description: 
  width: 
  height:     
  id: linkedlist
  link: /codingstrips/linkedlist
  title: Linked List
  concept: Linked List
  authors: 
    - Sangho Suh & Gracie Xia

- path: 
    - 
      path_url: '../images/2_data_structure/4_stack/stack.jpg'
      width: '85%'
      height: '85%'
  path_compressed: '../images/2_data_structure/4_stack/stack-min.jpg'
  path_combined: '../images/2_data_structure/4_stack/stack-plates-min.png'
  alt: 
  description: 
  width: 300
  height: 900
  id: stack-plates
  link: /codingstrips/stack-plates
  title: Stack of Plates
  concept: stack
  authors: 
    - Gracie Xia

- path: 
    - 
      path_url: '../images/3_algorithm/3_merge_sort/merge_sort.jpg'
      width: '90%'
      height: '90%'
  path_compressed: '../images/3_algorithm/3_merge_sort/merge_sort-min.jpg'
  path_combined: '../images/3_algorithm/3_merge_sort/merge_sort-house-min.png' 
  alt: 
  description: 
  width: 300
  height: 558
  title: Merge Sort
  concept: merge sort
  id: merge_sort-house
  link: /codingstrips/merge_sort-house
  authors: 
    - Gracie Xia

- path: 
    - 
      path_url: '../images/3_algorithm/4_bubble_sort/bubble_sort.png'
      width: '85%'
      height: '85%'
  path_compressed: '../images/3_algorithm/4_bubble_sort/bubble_sort-min.jpg'
  path_combined: '../images/3_algorithm/4_bubble_sort/bubble_sort-height-min.png'
  alt: 
  description: 
  width: 300
  height: 477
  title: Bubble Sort
  concept: bubble sort
  link: codingstrips/bubble_sort-height
  id: bubble_sort-height
  authors: 
    - Gracie Xia

- path: 
    - 
      path_url: '../images/4_problem_solving_technique/3_recursion/recursion-bonus/comic_1-min.png'
      width: '35%'
      height: '35%'
    - 
      path_url: '../images/4_problem_solving_technique/3_recursion/recursion-bonus/comic_2-min.png'
      width: '35%'
      height: '35%'
    - 
      path_url: '../images/4_problem_solving_technique/3_recursion/recursion-bonus/comic_3-min.png'
      width: '35%'
      height: '35%'
    - 
      path_url: '../images/4_problem_solving_technique/3_recursion/recursion-bonus/comic_4-min.png'
      width: '35%'
      height: '35%'
    - 
      path_url: '../images/4_problem_solving_technique/3_recursion/recursion-bonus/comic_5-min.png'
      width: '35%'
      height: '35%'
    - 
      path_url: '../images/4_problem_solving_technique/3_recursion/recursion-bonus/comic_6-min.png'
      width: '35%'
      height: '35%'
    - 
      path_url: '../images/4_problem_solving_technique/3_recursion/recursion-bonus/comic_7-min.png'
      width: '35%'
      height: '35%'
    - 
      path_url: '../images/4_problem_solving_technique/3_recursion/recursion-bonus/comic_8-min.png'
      width: '35%'
      height: '35%'
    - 
      path_url: '../images/4_problem_solving_technique/3_recursion/recursion-bonus/comic_9-min.png'
      width: '35%'
      height: '35%'
    - 
      path_url: '../images/4_problem_solving_technique/3_recursion/recursion-bonus/comic_10-min.png'
      width: '35%'
      height: '35%'
    - 
      path_url: '../images/4_problem_solving_technique/3_recursion/recursion-bonus/comic_11-min.png'
      width: '35%'
      height: '35%'
    - 
      path_url: '../images/4_problem_solving_technique/3_recursion/recursion-bonus/comic_12-min.png'
      width: '35%'
      height: '35%' 
    - 
      path_url: '../images/4_problem_solving_technique/3_recursion/recursion-bonus/comic_13.png'
      width: '35%'
      height: '35%'
  path_compressed: '../images/4_problem_solving_technique/3_recursion/recursion-bonus/comic_1-min.png'
  path_combined: '../images/4_problem_solving_technique/3_recursion/recursion-bonus/recursion-bonus-min.png'
  code: 'def my_bonus(service_year):<br>
  &nbsp;&nbsp;if service_year == 0:<br>
  &nbsp;&nbsp;&nbsp;&nbsp;return 0<br>
  &nbsp;&nbsp;if service_year == 1:<br>
  &nbsp;&nbsp;&nbsp;&nbsp;return 1<br>
  &nbsp;&nbsp;else:<br>
  &nbsp;&nbsp;&nbsp;&nbsp;return my_bonus(service_year - 1) + my_bonus(service_year - 2)<br><br>my_bonus(4)'
  alt: 
  description: 
  width: 
  height:     
  title: Bonus at Workplace
  id: recursion-bonus
  link: /codingstrips/recursion-bonus
  concept: recursion
  authors: 
    - Sangho Suh
    - Bernadette Cheng

- path: 
    - 
      path_url: '../images/4_problem_solving_technique/3_recursion/recursion-cleaning/4.1-min.png'
      width: '70%'
      height: '70%'
    - 
      path_url: '../images/4_problem_solving_technique/3_recursion/recursion-cleaning/4.2-min.png'
      width: '70%'
      height: '70%'
    - 
      path_url: '../images/4_problem_solving_technique/3_recursion/recursion-cleaning/4.3-min.png'
      width: '70%'
      height: '70%'
    - 
      path_url: '../images/4_problem_solving_technique/3_recursion/recursion-cleaning/4.4-min.png'
      width: '70%'
      height: '70%'
  path_compressed: '../images/4_problem_solving_technique/3_recursion/recursion-cleaning/4.1-min.png'
  path_combined: '../images/4_problem_solving_technique/3_recursion/recursion-cleaning/recursion-cleaning-min.png'
  code: 'divideWork(numOfStudents, area) {<br>
  &nbsp;&nbsp;if (numOfStudents <= 1) {<br>
  &nbsp;&nbsp;&nbsp;&nbsp;clean();<br>
  &nbsp;&nbsp;}<br>
  &nbsp;&nbsp;else {<br>
  &nbsp;&nbsp;&nbsp;&nbsp;students = numOfStudents / 2;<br>
  &nbsp;&nbsp;&nbsp;&nbsp;area = area / 2;<br>
  &nbsp;&nbsp;&nbsp;&nbsp;divideWork (students, area);<br>
  &nbsp;&nbsp;&nbsp;&nbsp;divideWork(numOfStudents - students, area);<br>
  &nbsp;&nbsp;}<br>}'
  alt: 
  description: 
  width: 
  id: recursion-cleaning
  link: /codingstrips/recursion-cleaning
  height: 
  title: Cleaning Day at School
  concept: recursion
  authors: 
    - Workshop Participants
    - Bernadette Cheng

- path: 
    - 
      path_url: '../images/4_problem_solving_technique/3_recursion/recursion-concert/comic_1-min.png'
      width: '35%'
      height: '35%'
    - 
      path_url: '../images/4_problem_solving_technique/3_recursion/recursion-concert/comic_2-min.png'
      width: '35%'
      height: '35%'
    - 
      path_url: '../images/4_problem_solving_technique/3_recursion/recursion-concert/comic_3-min.png'
      width: '35%'
      height: '35%'
    - 
      path_url: '../images/4_problem_solving_technique/3_recursion/recursion-concert/comic_4-min.png'
      width: '35%'
      height: '35%'
    - 
      path_url: '../images/4_problem_solving_technique/3_recursion/recursion-concert/comic_5-min.png'
      width: '35%'
      height: '35%'
    - 
      path_url: '../images/4_problem_solving_technique/3_recursion/recursion-concert/comic_6-min.png'
      width: '35%'
      height: '35%'
    - 
      path_url: '../images/4_problem_solving_technique/3_recursion/recursion-concert/comic_7_-min.png'
      width: '35%'
      height: '35%'
    - 
      path_url: '../images/4_problem_solving_technique/3_recursion/recursion-concert/comic_8-min.png'
      width: '35%'
      height: '35%'
    - 
      path_url: '../images/4_problem_solving_technique/3_recursion/recursion-concert/comic_9_-min.png'
      width: '35%'
      height: '35%'
    - 
      path_url: '../images/4_problem_solving_technique/3_recursion/recursion-concert/comic_10-min.png'
      width: '35%'
      height: '35%'
    - 
      path_url: '../images/4_problem_solving_technique/3_recursion/recursion-concert/comic_11-min.png'
      width: '35%'
      height: '35%'
    - 
      path_url: '../images/4_problem_solving_technique/3_recursion/recursion-concert/comic_12-min.png'
      width: '35%'
      height: '35%'
    - 
      path_url: '../images/4_problem_solving_technique/3_recursion/recursion-concert/comic_13-min.png'
      width: '35%'
      height: '35%'
  path_compressed: '../images/4_problem_solving_technique/3_recursion/recursion-concert/comic_1-min.png'
  path_combined: '../images/4_problem_solving_technique/3_recursion/recursion-concert/recursion-concert-min.png'
  code: 'def how_many_in_front (num):<br>
  &nbsp;&nbsp;if num == 0:<br>
  &nbsp;&nbsp;&nbsp;&nbsp;return 0;<br>
  &nbsp;&nbsp;else:<br>
  &nbsp;&nbsp;&nbsp;&nbsp;return 1 + how_many_in_front (num - 1);<br><br>how_many_in_front(4);'
  alt: 
  description: 
  width: 
    height:     
  id: recursion-concert
  link: /codingstrips/recursion-concert
  title: Concert
  concept: recursion
  authors: 
    - Sangho Suh
    - Bernadette Cheng